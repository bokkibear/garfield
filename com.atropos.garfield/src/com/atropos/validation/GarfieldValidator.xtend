/*
 * generated by Xtext
 */
package com.atropos.validation

import com.atropos.garfield.Entity
import com.atropos.garfield.GarfieldPackage
import com.atropos.garfield.Model
import org.eclipse.xtext.validation.Check

/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
 
 class GarfieldValidator extends AbstractGarfieldValidator {	
		
	
	@Check
	def checkEntityNameIsUnique(Entity entity) {
		
		val model = entity.eContainer.eContainer as Model;
		
		val gameEntities = model.game.declarations.filter(typeof(Entity));
		
		for (Entity eachEntity : gameEntities) {
							
			if ( !eachEntity.equals(entity) && entity.name.equals(eachEntity.name) ) {
				error("Entity names must be unique!", entity, GarfieldPackage::eINSTANCE.entity_Name);
			}
			
		}
	}
		
}
